{% liquid
  assign ids_in_cart = ''
  for item in cart.items
    assign ids_in_cart = ids_in_cart | append : item.variant.id | append : ','
  endfor

  assign gwp_buttons_html = ''
  assign gwp_closest_threshold = 0 

  assign gwp_show_some_buttons = false
%}

{% for i in (1..5) %}

  {% liquid 
    assign gwp_tier_active_param = 'gwp_active_' | append : i | append : '_tier'
  %}

  {% if settings[gwp_tier_active_param] %}
    {% liquid

      assign gwp_tier_hide_progress_bar = 'gwp_hide_progress_bar_' | append : i | append : '_tier'

      assign gwp_tier_threshold_param = 'gwp_threshold_' | append : i | append : '_tier'
      assign gwp_tier_threshold_max_param = 'gwp_threshold_max_' | append : i | append : '_tier'

      comment
        Items Condition Data
      endcomment
      assign gwp_tier_items_condition = 'gwp_items_condition_' | append : i | append : '_tier'
      assign gwp_tier_items_amount_condition = 'gwp_items_amount_condition_' | append : i | append : '_tier'
      assign gwp_tier_items_amount_condition = settings[gwp_tier_items_amount_condition]

      assign gwp_tier_max_items_param = 'gwp_product_count_' | append : i | append : '_tier'
      assign gwp_tier_product_param = 'gwp_products_' | append : i | append : '_tier'
      assign gwp_tier_title_param = 'gwp_title_'  | append : i | append : '_tier'


      assign threshold = settings[gwp_tier_threshold_param] | times: 100
      assign threshold_max = settings[gwp_tier_threshold_max_param] | times: 100
      if threshold_max == 0 
        assign threshold_max = 100000000
      endif


      assign gwp_ids = ''
      assign gwp_in_cart_count = 0
      assign gwp_available_products = 0
      
      if cart.total_price < threshold and gwp_closest_threshold == 0 and settings[gwp_tier_hide_progress_bar] == false
        assign gwp_closest_threshold = threshold | times : 1.0
        assign gwp_closest_tier_name = settings[gwp_tier_title_param]
      endif
      


      for gwp_product in settings[gwp_tier_product_param]
        if gwp_product.available or ids_in_cart contains gwp_product.variants[0].id
          assign gwp_available_products = gwp_available_products | plus : 1
          assign gwp_ids = gwp_ids | append : gwp_product.variants[0].id | append : ','
        endif

        if ids_in_cart contains gwp_product.variants[0].id
          assign gwp_in_cart_count = gwp_in_cart_count | plus : 1
        endif
      endfor
      assign gwp_tier_max_items_value = settings[gwp_tier_max_items_param] | at_most : gwp_available_products



      comment 
        Items Condition Check
      endcomment
      assign gwp_items_condition_status = true
      if gwp_tier_items_amount_condition > 0
        assign ids_in_cart_array = ids_in_cart | split : ','
        for cart_one_id in ids_in_cart_array
          if settings[gwp_tier_items_condition] contains cart_one_id
            assign gwp_tier_items_amount_condition = gwp_tier_items_amount_condition | minus : 1
          endif
        endfor
        if gwp_tier_items_amount_condition > 0
          assign gwp_items_condition_status = false
        endif 
      endif


      if gwp_available_products == 0
       continue
      endif 

    %}

    {% comment %}
      Create buttons for tiers products popups
    {% endcomment %}

    {% capture gwp_button_html %}
      {% liquid
        assign tier_products_count = gwp_ids | split :',' | size 
        if gwp_in_cart_count < gwp_tier_max_items_value and cart.total_price >= threshold and cart.total_price < threshold_max and gwp_items_condition_status 
          assign gwp_status = true
          assign gwp_show_some_buttons = true
        else
          assign gwp_status = false
        endif          
      %}


      <div class='gwp-open-button gwp-open-button-tier-{{ i }} hide {% if gwp_status and gwp_items_condition_status %}show-flex{% endif %}'>
      
        <svg class="svg-icon" style="vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M989.866667 512H34.133333c-10.24 0-17.066667-6.826667-17.066666-17.066667v-136.533333C17.066667 310.613333 54.613333 273.066667 102.4 273.066667h819.2c47.786667 0 85.333333 37.546667 85.333333 85.333333v136.533333c0 10.24-6.826667 17.066667-17.066666 17.066667zM51.2 477.866667h921.6v-119.466667c0-27.306667-23.893333-51.2-51.2-51.2H102.4c-27.306667 0-51.2 23.893333-51.2 51.2V477.866667z" fill="" /><path d="M887.466667 989.866667H136.533333c-47.786667 0-85.333333-37.546667-85.333333-85.333334v-409.6c0-10.24 6.826667-17.066667 17.066667-17.066666h887.466666c10.24 0 17.066667 6.826667 17.066667 17.066666v409.6c0 47.786667-37.546667 85.333333-85.333333 85.333334zM85.333333 512v392.533333c0 27.306667 23.893333 51.2 51.2 51.2h750.933334c27.306667 0 51.2-23.893333 51.2-51.2V512h-853.333334zM512 307.2c-102.4 0-191.146667-78.506667-218.453333-191.146667-6.826667-23.893333 0-51.2 20.48-68.266666 13.653333-13.653333 34.133333-17.066667 54.613333-13.653334 95.573333 34.133333 163.84 136.533333 163.84 252.586667-3.413333 13.653333-10.24 20.48-20.48 20.48z m-163.84-238.933333c-6.826667 0-10.24 3.413333-13.653333 6.826666-6.826667 6.826667-13.653333 20.48-10.24 34.133334 23.893333 88.746667 92.16 153.6 167.253333 163.84-6.826667-95.573333-61.44-177.493333-139.946667-201.386667 0-3.413333 0-3.413333-3.413333-3.413333z" fill="" /><path d="M512 307.2c-10.24 0-17.066667-6.826667-17.066667-17.066667 0-116.053333 68.266667-218.453333 163.84-252.586666 17.066667-6.826667 37.546667-3.413333 54.613334 13.653333s27.306667 44.373333 20.48 68.266667C703.146667 228.693333 614.4 307.2 512 307.2z m163.84-238.933333h-6.826667c-78.506667 27.306667-133.12 109.226667-139.946666 201.386666 78.506667-10.24 146.773333-71.68 167.253333-163.84 3.413333-17.066667-3.413333-27.306667-10.24-34.133333 0 0-3.413333-3.413333-10.24-3.413333z" fill="" /><path d="M512 972.8c-10.24 0-17.066667-6.826667-17.066667-17.066667V310.613333l-109.226666 95.573334c-6.826667 6.826667-17.066667 6.826667-23.893334 0s-6.826667-17.066667 0-23.893334l136.533334-119.466666c3.413333-3.413333 13.653333-6.826667 17.066666-3.413334 6.826667 3.413333 10.24 10.24 10.24 17.066667v682.666667c3.413333 3.413333-3.413333 13.653333-13.653333 13.653333z" fill="" /><path d="M648.533333 409.6c-3.413333 0-6.826667 0-10.24-3.413333l-136.533333-119.466667c-6.826667-6.826667-6.826667-17.066667 0-23.893333s17.066667-6.826667 23.893333 0l136.533334 119.466666c6.826667 6.826667 6.826667 17.066667 0 23.893334-3.413333 0-10.24 3.413333-13.653334 3.413333z" fill="" /></svg>
        <span class='title'>{{ settings[gwp_tier_title_param] }}</span>
        <span data-tier={{ i }} class='gwp-button btn {% if settings.site_brand == "livingproof" and settings.site_region == "us" %}btn--black{% else %}btn--primary{% endif %}'>{{ 'gift_with_purchase.gwp_general.choose_your_gift_button' | t }}</span>
      </div>
    {% endcapture %}
    {% assign gwp_buttons_html = gwp_buttons_html | append : gwp_button_html %}

  {% endif %}
{% endfor %}



<div {% if template != 'cart' %} style="order:{{settings.cart_drawer_position_gwp_buttons | times: 10}}" {% endif %} class='gwp-wrapper {% if gwp_closest_threshold <= 0 and gwp_show_some_buttons == false %}make-hidden{% endif %}'>







  <div style="background:{{settings.gwp_buttons_background}}" class='gwp-progress-bar-wrapper hide {% if gwp_closest_threshold > 0%}show-flex{% endif %}'>

    <div class='info'>
      <div class='title'>{{ gwp_closest_tier_name }}</div>
      <div class='goal'>
        {% liquid
          assign gwp_closest_threshold_text = gwp_closest_threshold | minus : cart.total_price | money 
          assign gwp_closest_threshold_text = "<span class='value'>" | append : gwp_closest_threshold_text | append : "</span>"
          echo 'gift_with_purchase.gwp_general.progress_bar_threshold_info_html' | t : value : gwp_closest_threshold_text
        %}
      </div>
    </div>
    <div class='progress-bar-block'>
      <div class='progress-bar'>
        <div class='helper'
          style="background:{{settings.gwp_bar_background}}; width:{% if gwp_closest_threshold != 0 %}{{ cart.total_price | divided_by : gwp_closest_threshold | times: 100}}{%else%}100{%endif%}%"></div>
      </div>
      <span class='limit'><span class='end'>{{ gwp_closest_threshold | money }}</span></span>
    </div>
  </div>
  





  {{ gwp_buttons_html }}
  
  <div class='gwp-block gwp-popup'>
      <div class='content'>
        {% render 'icon-close' %}

        <h2></h2>
        <div class='information'>
          <span class='multiple'>
            {{ 'gift_with_purchase.gwp_general.number_of_gwp_to_choose_html' | t : value : "<span class='available-gwp-count'></span>" }}
          </span>
          <span class='single'>
            {{ 'gift_with_purchase.gwp_general.only_one_gwp_to_choose' | t }}
          </span>
        </div>



        {% for i in (1..11) %}
          {% liquid 
            if i <= 5
              assign tier_number = i
              assign tier_prefix = tier_number | append: '_tier'
              assign tier_classes = '-content'
            else
              assign tier_number = i | minus : 5
              assign tier_prefix = tier_number | append: '_tier_cpn'
              assign tier_classes = '_coupon-content gwp-popup-coupon'
            endif

            assign gwp_tier_active_param = 'gwp_active_' | append : tier_prefix
            assign gwp_tier_product_param = 'gwp_products_' | append : tier_prefix




            assign gwp_available_products = 0
            for gwp_product in settings[gwp_tier_product_param]
              if gwp_product.available or ids_in_cart contains gwp_product.variants[0].id
                assign gwp_available_products = gwp_available_products | plus : 1
              endif
            endfor



            if settings[gwp_tier_active_param] == false or gwp_available_products == 0
              continue
            endif 
      
          %}

          <div class='tier-content tier-{{ tier_number }}{{tier_classes}} hide'>

            {% assign gwp_tier_product_param = 'gwp_products_' | append: tier_prefix %}

              {% assign one_with_description = false %}
              {% for gwp_product in settings[gwp_tier_product_param] %}
                {% if gwp_product.metafields.theme.cutline != blank %}
                  {% assign one_with_description = true %}
                {% endif %}
              {% endfor %}

              <div class="products-list carousel carousel--mobile gwp-products-slider {% if one_with_description %}show-short-description{% endif %}">
                {% for gwp_product in settings[gwp_tier_product_param] %}

                  <div data-id="{{ gwp_product.variants[0].id }}" class="product-element carousel__item variant-id-{{ gwp_product.variants[0].id }} {% if ids_in_cart contains gwp_product.variants[0].id %}gwp-selected{% endif %} show">
                    
                    <div class='image-box'>
                      <img src='{{ gwp_product | img_url : '600x' }}'/>
                    </div>

                    <div class='name'>{{ gwp_product.title }}</div>

                    <span class='add'>
                      <span class="selected-text gwp-button btn btn--secondary">
                        {{ 'gift_with_purchase.gwp_general.unselect_gwp_element_button' | t }}
                      </span>
                      <span class="not-selected-text btn gwp-button btn--primary">
                        {{ 'gift_with_purchase.gwp_general.select_gwp_element_button' | t }}
                      </span>
                    </span>

                    <div class='description'>{{gwp_product.metafields.theme.cutline}}</div>

                    {% if gwp_product.metafields.custom.gwp_value > 0 or gwp_product.price > 0 %}
                      <div class='price-value'>
                        {{ 'gift_with_purchase.gwp_general.gwp_element_value_label' | t }}
                        {% if gwp_product.metafields.custom.gwp_value %}
                          {{gwp_product.metafields.custom.gwp_value | times: 100 | money}}
                        {% else %}
                          {{gwp_product.price | money}}
                        {% endif %}
                      </div>
                    {% endif %}
                                
                  </div>
                {% endfor %}
              </div>

          </div>
        {% endfor %}        

      </div>
  </div> 
</div>

<style>
  #cart-drawer .gwp-wrapper{
    background:{{settings.gwp_buttons_background}};
  }
</style> 


{% if with_assets %}
  {%- render 'gift-with-purchase-js-data' %}
  {{ 'gift-with-purchase.css' | asset_url | stylesheet_tag }}
  {{ 'gift-with-purchase.js'  | asset_url | script_tag }}
{% endif %}
